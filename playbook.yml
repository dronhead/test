---

- hosts: all
  become: yes
  # pre_tasks:
  #   - name: "Without Sudo for localhost"
  #     setup:
  #     when: inventory_hostname == "localhost"
  #     become: false
  #become_method: sudo
  # Для сбора фактов без sudo
  # pre_tasks:
  #   - name: Gather facts without sudo
  #     setup:
  #     become: false
  #become: true

  roles:
    #- install_docker 
    #- run_nginx_container
    #- ansible-haproxy
    - info_role
  

  # tasks:
  #   - name: install dependencies
  #     apt:
  #       name: "{{item}}"
  #       state: present
  #       update_cache: true
  #     loop:
  #         - apt-transport-https
  #         - ca-certificates
  #         - curl
  #         - gnupg-agent
  #         - software-properties-common
  #   - name: add GPG key
  #     apt_key:
  #       url: https://download.docker.com/linux/ubuntu/gpg
  #       state: present
  #   - name: add docker repository to apt
  #     apt_repository:
  #       repo: deb https://download.docker.com/linux/ubuntu bionic stable
  #       state: present
  #   - name: install docker
  #     apt:
  #       name: "{{item}}"
  #       state: latest
  #       update_cache: true
  #     loop:
  #       - docker-ce
  #       - docker-ce-cli
  #       - containerd.io
  #   #- name: check docker is active
  #     #service:
  #       #name: docker
  #       #state: started
  #       #enabled: true
  #   - name: Ensure group "docker" exists
  #     ansible.builtin.group:
  #       name: docker
  #       state: present
  #   - name: adding ubuntu user to docker group
  #     user:
  #       name: ubuntu
  #       groups: docker
  #       append: true
  #   - name: install docker-compose
  #     get_url:
  #       url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
  #       dest: /usr/local/bin/docker-compose
  #       mode: 'u+x,g+x'
  #   - name: change file ownership, group and permissions
  #     ansible.builtin.file:
  #       path: /usr/local/bin/docker-compose
  #       owner: ubuntu

  #   #- name: Start Docker service
  #     #service:
  #       #name: docker
  #       #state: started
  #       #enabled: true
  #   - name: Pull nginx Docker image
  #     docker_image:
  #       name: nginx
  #       source: pull
  #   - name: Create volume
  #     docker_volume:
  #       name: nginx-data
  #       driver: local
  #   - name: Run nginx Docker container
  #     docker_container:
  #       name: nginx
  #       image: nginx
  #       state: started
  #       ports:
  #         - "80:80"
  #       volumes:
  #         - "nginx-data:/usr/share/nginx/html:ro"

  # handlers:
  #   - name: restart_and_check_docker
  #     ansible.builtin.service:
  #       name: docker
  #       state: restarted
  #     notify: ensure_docker_active   
  #   - name: ensure_docker_active
  #     ansible.builtin.service:
  #       name: docker
  #       state: started
  #       enabled: true
